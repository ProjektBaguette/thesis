#LyX 2.0 created this file. For more info see http://www.lyx.org/
\lyxformat 413
\begin_document
\begin_header
\textclass scrbook
\begin_preamble
% increases link area for cross-references and autoname them
\AtBeginDocument{\renewcommand{\ref}[1]{\mbox{\autoref{#1}}}}
\addto\extrasenglish{%
 \renewcommand*{\equationautorefname}[1]{}
 \renewcommand{\sectionautorefname}{sec.\negthinspace}
 \renewcommand{\subsectionautorefname}{sec.\negthinspace}
 \renewcommand{\subsubsectionautorefname}{sec.\negthinspace}
 \renewcommand{\figureautorefname}{Fig.\negthinspace}
 \renewcommand{\tableautorefname}{Tab.\negthinspace}
}

% in case somebody want to have the label "Equation"
%\renewcommand{\eqref}[1]{Equation~(\negthinspace\autoref{#1})}

% that links to image floats jumps to the beginning
% of the float and not to its caption
\usepackage[figure]{hypcap}

% the pages of the TOC is numbered roman
% and a pdf-bookmark for the TOC is added
\let\myTOC\tableofcontents
\renewcommand\tableofcontents{%
  \frontmatter
  \pdfbookmark[1]{\contentsname}{}
  \myTOC
  \mainmatter }

% makes caption labels bold
\setkomafont{captionlabel}{\bfseries}
\setcapindent{1em}

% enables calculations
\usepackage{calc}

% fancy page header/footer settings
\renewcommand{\chaptermark}[1]{\markboth{#1}{#1}}
\renewcommand{\sectionmark}[1]{\markright{\thesection\ #1}}

% increases the bottom float placement fraction
\renewcommand{\bottomfraction}{0.5}

% avoids that floats are placed above its sections
\let\mySection\section\renewcommand{\section}{\suppressfloats[t]\mySection}
\end_preamble
\options intoc,bibliography=totoc,index=totoc,BCOR10mm,captions=tableheading,titlepage,fleqn
\use_default_options true
\master thesis.lyx
\begin_modules
customHeadersFooters
\end_modules
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman lmodern
\font_sans lmss
\font_typewriter lmtt
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\float_placement h
\paperfontsize 12
\spacing single
\use_hyperref true
\pdf_title "Your title"
\pdf_author "Your name"
\pdf_bookmarks true
\pdf_bookmarksnumbered true
\pdf_bookmarksopen true
\pdf_bookmarksopenlevel 1
\pdf_breaklinks false
\pdf_pdfborder true
\pdf_colorlinks false
\pdf_backref false
\pdf_pdfusetitle false
\pdf_quoted_options "pdfpagelayout=OneColumn, pdfnewwindow=true, pdfstartview=XYZ, plainpages=false"
\papersize a4paper
\use_geometry false
\use_amsmath 2
\use_esint 1
\use_mhchem 1
\use_mathdots 1
\cite_engine basic
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\use_refstyle 0
\branch NoChildDocument
\selected 0
\filename_suffix 0
\color #ff0000
\end_branch
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 2
\paragraph_separation skip
\defskip medskip
\quotes_language english
\papercolumns 1
\papersides 2
\paperpagestyle fancy
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Left Header
Giuliano Grassi
\end_layout

\begin_layout Right Header
SQA Process-Tailoring 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
linebreak[1]
\end_layout

\end_inset

for Small-Scaled Software Engineering Enterprises
\end_layout

\begin_layout Center Footer

\end_layout

\begin_layout Right Footer
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
thepage
\end_layout

\end_inset

 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
 
\end_layout

\end_inset

of 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
 
\end_layout

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
pageref{LastPage}
\end_layout

\end_inset


\end_layout

\begin_layout Chapter
Theory
\end_layout

\begin_layout Standard
ÜBERSICHT vom kapitel
\end_layout

\begin_layout Section
Target Field
\end_layout

\begin_layout Standard
The motivation to write the paper originated through own experiences working
 in small companies, without operating a dedicated Quality Assurance Strategy
 within the software or product development process.
 The root of the problems can be summarized into two categories.
 On the one hand, lack of experience in the field and on the other hand
 preassure to deliver on time for the market.
 
\end_layout

\begin_layout Standard
The first problem addresses the roles and the structure of small companys
 in general.
 A small companys strategy in staff selection is to employ generalists.
 (citation forbes) Ideally there should be an optimal mixture throughout
 specialists and generalists.
 In addition, it depends on each company differently, but from startups
 to mid-stage sized companys, the generalists have generaly the superiority.
 
\end_layout

\begin_layout Standard
The second problem faces the tactical advantage of small and therefore flexible
 and straightforward mentality of the companys.
 Due to a lack of processes and management obstacles in project management,
 the implementation process itself is the single measurable process.
 To achieve the cost leader advantage in the market, it requires to deliver
 a product within highspeed and simultaneously to achieve the required business
 goals.
 This short-term view on solving the problem will lead to abandoned hazardous
 sites generaly speaking, in terms of software engineering.
 The next team will garbage the previous work and restart with the vision
 of solving the problem, this time, adequat.
 Therefore, i selected four requirements for the SQA Process of startups
 till mid-staged companys: (umschreiben, keine wertung)
\end_layout

\begin_layout Standard
1) in fliesstext einfügen
\end_layout

\begin_layout Itemize
Tools over processes
\end_layout

\begin_layout Itemize
Applicable to Generalized Staff
\end_layout

\begin_layout Itemize
Not depending on Development Frameworks
\end_layout

\begin_layout Itemize
Cost and time efficiency
\end_layout

\begin_layout Standard
Whenever a highly specialized field needs to be treated through the Software
 Quality Assurance Process, buy the appropriate software solution which
 helps you safe time and effort.
 It should be normal to train the staff on changes that will apear through
 new QA Processes.
 The optimal solution will focus on the ease and understandability of that
 QA Processes for all involved.
 However, the process should not depend or influence on the habitual development
 process.
\end_layout

\begin_layout Standard
Zusammenfassung vom wichtigsten.
\end_layout

\begin_layout Section
Related Work
\end_layout

\begin_layout Standard
Anzahl methoden jetz stelle ich die wichtigsten vor, bezüglich thema
\end_layout

\begin_layout Standard
On exploring the different researches about best practives in SQA i came
 across several numbers of authors, which have worked in different areas:
\end_layout

\begin_layout Standard
The ideas behind tailoring software development have been developped by
 Ferrat and Mai (2010).
 The tailoring of SQA Methods is split into three phases which has a defined
 aspect to solve 
\end_layout

\begin_layout Enumerate
Product Design >> Process Selection
\end_layout

\begin_layout Enumerate
Project Design >> Process Modification
\end_layout

\begin_layout Enumerate
Feedback Design >> Process Monitoring
\end_layout

\begin_layout Standard
The goal of the study was to show the coherence and dependencies between
 the involved counterparts as the System Provider, the System User and the
 Development Team in a product development process.
 The main prospect was to be aware of, that the degree of product cutsomization,
 standardisation and further alignments have a big impact on the overall
 investments in Quality.
 The degree of high or low standardization of the Quality Assurance Process
 depends on mainly four criterias which will be determined through the specifica
tions in the product design phase.
 All involved counterparts prioritize the main Work Product Description
 and build upon these targets the structure for the project.
 Once the overall structure is composed, the combination of team experience,
 project scope, risks or the culture will influence the variance of the
 process modification in comparison to the standard process.
 The continuous improvement with adaptions of the selected processes during
 the project lifecycle is an overall found prerequisite for a successfull
 project.
 The presented model is very theoretically but shows a dependency overview
 and tries to break down the complexity of correlations in a project into
 understandable pieces.
 
\begin_inset CommandInset citation
LatexCommand cite
key "Ferratt:2010:TSD:1796900.1796963"

\end_inset


\end_layout

\begin_layout Standard
The second...
\end_layout

\begin_layout Standard

\emph on
A Customized Model on Software Quality Assurance & Reuse: 
\emph default
This approach focuses on the differentiation between process and product
 oriented Quality Assurance Models.
 The product oriented aspect relies on reusing prooven and already tested
 components by capturing reusability metrics.
 The process oriented aspect takes different phases of the product develoopment
 cycle into concideration.
 The proposed Model creates in total 9 different Quality Assurance Stations
 which will be traversed sequencially:
\end_layout

\begin_layout Enumerate
Estimation & Forecasting Division
\end_layout

\begin_layout Enumerate
Planing & Reuse Center
\end_layout

\begin_layout Enumerate
Standard Enforcing Division
\end_layout

\begin_layout Enumerate
Manufacturing Division
\end_layout

\begin_layout Enumerate
Monitoring the Manufacturing Division
\end_layout

\begin_layout Enumerate
Reusable Code Repository
\end_layout

\begin_layout Enumerate
Evaluation and Imporvement
\end_layout

\begin_layout Enumerate
User Satisfaction
\end_layout

\begin_layout Enumerate
Reusable Service Repository
\end_layout

\begin_layout Standard
The model emphasis on generating and maintain repositories of reusable component
s to reduce costs by improving the speed of development.
 The Model takes into account the companies own policies and guarantees
 the quality by integrating evalutation, improvement and monitoring of reusable
 assets which are used in Components based Engineering.
 (Quelle)
\end_layout

\begin_layout Standard

\emph on
A Customizable Agile Software Quality Assurance Model: (AQAM) provides detailed
 guidelines and templates for real world implementations and customizations
 focusing on small and medium sized agile software development teams to
 analyze and improve their Quality Assurance capabilities.
 The model describes 20 different Key Process Areas (KPA).
 Each KPA is described by 
\end_layout

\begin_layout Standard
Fliesstext.
 
\end_layout

\begin_layout Itemize
Guidelines
\end_layout

\begin_layout Itemize
Benefits
\end_layout

\begin_layout Itemize
Process
\end_layout

\begin_layout Itemize
Best Practice
\end_layout

\begin_layout Itemize
Templates
\end_layout

\begin_layout Itemize
Customization
\end_layout

\begin_layout Itemize
Maturity Level
\end_layout

\begin_layout Standard
The first step is to define the actual maturity level of an analyzed KPA
 Process.
 The Project Manager and the development team can propose an appropriate
 action plan.
 By cherry picking the right combination of recommended actions, processes
 and artifacts from the AQAM Model for a single KPA Process.
 The authors paper illustrates the workflow of AQAM by selecting and customizing
 the KPA Peer Review.
 The KPA consisted of seven Guidelines to different review types, seven
 best practices for scaffolding the requirements for the review, three templates
 for documentation purposes, four maturity levels with advised steps to
 achieve and the customization section which is sparated in a required and
 a recommended content declaration.
 (quelle)
\end_layout

\begin_layout Standard
the fourth...
\end_layout

\begin_layout Standard

\emph on
Pragmatic Prioritization of Software Quality Assurance Efforts:
\emph default
 The paper shows that more than 90% of the software development cost is
 spent on maintainance and evolution activities.
 Therefore, practitioners are in dire need of pragmatic approaches to effectivel
y prioritize the SQA efforts 
\begin_inset CommandInset citation
LatexCommand cite
key "Shihab:2011:PPS:1985793.1986007"

\end_inset

.
 The work is split into efforts for code level quality, which assures the
 quality of already implemented code.
 On the other hand change level quality, which focuses on a high level of
 quality for new code changes or new features.
 Both parts follow the specific guidelines, which are defined as
\end_layout

\begin_layout Standard
Säatze draus machen
\end_layout

\begin_layout Itemize
Focused Granularity, unit of prioritization must be small enough
\end_layout

\begin_layout Itemize
Timely Feedback, act on feedback/results as quick as possible
\end_layout

\begin_layout Itemize
Estimate Efforts, be aware of the amount of work
\end_layout

\begin_layout Itemize
Evaluate Generality, evalutation of approach in different domains
\end_layout

\begin_layout Standard
The approach at the code level helps to prioritize Unit Test creation.
 The main idea is to connect all actions tracked in the Concurrent Versions
 System (CVS) repositories to the issue tracking tools.
 By creating a coherent mapped environment between code changes (commits)
 and issue types like bug, change request, feature, improvement and so on,
 its possible to analyze the historical data and calculate just in time
 heuristics for forecasting purposes in a report form.
 The most usefull heuristics are Largest Fixed, Largest Modified, Most Frequent
 Fixed, Most Recently Modified and show the highest risk of having a bug
 in the future.
 The approach at the change level focuses on catching bugs before they are
 injected into the code base by identifying the risky changes and rigourously
 reviewing them.
 The data needed to calculate the heuristics compose in the same manner
 as described above.
 To calculate the risk, the writers propose 
\end_layout

\begin_layout Enumerate
Amount of churn in each function
\end_layout

\begin_layout Enumerate
The spread of the change based on affected Files
\end_layout

\begin_layout Enumerate
Total of previously Changes for bug-fixings in this function
\end_layout

\begin_layout Enumerate
Amount of different developers that changed this function
\end_layout

\begin_layout Standard
The possibility to create just in time reports to prioritize tasks on a
 statistically based calculation decreases the project managers or quality
 assurance managers workload massively which leads them to focus more on
 different topics.
 -> zwei sätze
\end_layout

\begin_layout Standard

\emph on
- A Quality Assurance Model for Analysis Phase
\emph default
: Theory
\end_layout

\begin_layout Standard

\emph on
- Knowledge-Based System for Software Requirements Analysis and Management
\emph default
: Theory
\end_layout

\begin_layout Standard

\emph on
An Efficient and Effecctive New Generation Objective Quality Model for Mobile
 Applications:
\emph default
 Developing mobile application is similiar to desktop application but there
 are certain factors that make mobile apps different.
 The biggest difference is the way people use it.
 Mobile apps are usually small in size and are designed in a way that they
 use less power.
 Users will delete or change the application if its not according to their
 needs and perception of quality.
\begin_inset CommandInset citation
LatexCommand cite
after "p.36"
key "spriestersbach2004quality"

\end_inset

.
 The Quality Model presented is divided into device independent quality
 characteristics as
\end_layout

\begin_layout Standard
in fliesstext..
\end_layout

\begin_layout Enumerate
Functionality (Suitability & Security)
\end_layout

\begin_layout Enumerate
Usability
\end_layout

\begin_layout Enumerate
Efficiency
\end_layout

\begin_layout Enumerate
Maintainability (Adaptability & Extensibility)
\end_layout

\begin_layout Enumerate
Data Integrity
\end_layout

\begin_layout Enumerate
Portability
\end_layout

\begin_layout Standard
The Role of the QA team and the most important factors which shuld be considered
 to put value to quality of mobile applications are as follows 
\begin_inset CommandInset citation
LatexCommand cite
after "p.40"
key "spriestersbach2004quality"

\end_inset

.
 1) 2) 3)
\end_layout

\begin_layout Itemize
Validation of End User Requirements
\end_layout

\begin_layout Itemize
Monitor Mobile application production
\end_layout

\begin_layout Itemize
Validate performance of Mobile applicaiton
\end_layout

\begin_layout Itemize
Tracking quality of mobile application after deployment
\end_layout

\begin_layout Standard
XXXXXXXXXXXXXXXXXXXXXXXXXX
\end_layout

\begin_layout Standard
um gebiet abzugrenzen möchte ich es hier eingrenzen....
\end_layout

\begin_layout Standard
I decided to link each of the most important product lifecycle stages, which
 are
\end_layout

\begin_layout Standard
fliesstext 
\end_layout

\begin_layout Enumerate
Requirementes&Specifications: What should your product do and ow do you
 plan to do it
\end_layout

\begin_layout Enumerate
Implementation: What are you going to program and how are you sure its right
\end_layout

\begin_layout Standard
to the evaluated requirements of the SQA process, which are
\end_layout

\begin_layout Standard
fliesstext
\end_layout

\begin_layout Itemize
Tools over processes
\end_layout

\begin_layout Itemize
Applicable to Generalized Staff
\end_layout

\begin_layout Itemize
Not depending on Development Frameworks
\end_layout

\begin_layout Itemize
Cost and time efficiency
\end_layout

\begin_layout Standard
I am providing to each lifecycle stage an overview of found best practices
 which fullfill the SQA requirements.
 
\end_layout

\begin_layout Standard
daraus folgt meine hypothese
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Standard
\begin_inset Box Boxed
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout
SQA Processes tailored and prioritized to the requirements, specifications
 and implementation stages will increase product quality by focusing on
 tools, generalist labor, cost and time efficiency and compatibility to
 the actual engineering process for small software engineering enterprises.
 
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Branch NoChildDocument
status open

\begin_layout Standard
\begin_inset CommandInset bibtex
LatexCommand bibtex
bibfiles "thesisExample"
options "alpha"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset nomencl_print
LatexCommand printnomenclature
set_width "custom"
width "2.5cm"

\end_inset


\end_layout

\end_inset


\end_layout

\end_body
\end_document
