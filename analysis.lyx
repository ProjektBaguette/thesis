#LyX 2.0 created this file. For more info see http://www.lyx.org/
\lyxformat 413
\begin_document
\begin_header
\textclass scrbook
\begin_preamble
% increases link area for cross-references and autoname them
\AtBeginDocument{\renewcommand{\ref}[1]{\mbox{\autoref{#1}}}}
\addto\extrasenglish{%
 \renewcommand*{\equationautorefname}[1]{}
 \renewcommand{\sectionautorefname}{sec.\negthinspace}
 \renewcommand{\subsectionautorefname}{sec.\negthinspace}
 \renewcommand{\subsubsectionautorefname}{sec.\negthinspace}
 \renewcommand{\figureautorefname}{Fig.\negthinspace}
 \renewcommand{\tableautorefname}{Tab.\negthinspace}
}

% in case somebody want to have the label "Equation"
%\renewcommand{\eqref}[1]{Equation~(\negthinspace\autoref{#1})}

% that links to image floats jumps to the beginning
% of the float and not to its caption
\usepackage[figure]{hypcap}

% the pages of the TOC is numbered roman
% and a pdf-bookmark for the TOC is added
\let\myTOC\tableofcontents
\renewcommand\tableofcontents{%
  \frontmatter
  \pdfbookmark[1]{\contentsname}{}
  \myTOC
  \mainmatter }

% makes caption labels bold
\setkomafont{captionlabel}{\bfseries}
\setcapindent{1em}

% enables calculations
\usepackage{calc}

% fancy page header/footer settings
\renewcommand{\chaptermark}[1]{\markboth{#1}{#1}}
\renewcommand{\sectionmark}[1]{\markright{\thesection\ #1}}

% increases the bottom float placement fraction
\renewcommand{\bottomfraction}{0.5}

% avoids that floats are placed above its sections
\let\mySection\section\renewcommand{\section}{\suppressfloats[t]\mySection}
\end_preamble
\options intoc,bibliography=totoc,index=totoc,BCOR10mm,captions=tableheading,titlepage,fleqn
\use_default_options true
\master thesis.lyx
\begin_modules
customHeadersFooters
\end_modules
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman lmodern
\font_sans lmss
\font_typewriter lmtt
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\float_placement h
\paperfontsize 12
\spacing single
\use_hyperref true
\pdf_title "Your title"
\pdf_author "Your name"
\pdf_bookmarks true
\pdf_bookmarksnumbered true
\pdf_bookmarksopen true
\pdf_bookmarksopenlevel 1
\pdf_breaklinks false
\pdf_pdfborder true
\pdf_colorlinks false
\pdf_backref false
\pdf_pdfusetitle false
\pdf_quoted_options "pdfpagelayout=OneColumn, pdfnewwindow=true, pdfstartview=XYZ, plainpages=false"
\papersize a4paper
\use_geometry false
\use_amsmath 2
\use_esint 1
\use_mhchem 1
\use_mathdots 1
\cite_engine basic
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\use_refstyle 0
\branch NoChildDocument
\selected 0
\filename_suffix 0
\color #ff0000
\end_branch
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 2
\paragraph_separation skip
\defskip medskip
\quotes_language english
\papercolumns 1
\papersides 2
\paperpagestyle fancy
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Left Header
Giuliano Grassi
\end_layout

\begin_layout Right Header
SQA Process-Tailoring 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
linebreak[1]
\end_layout

\end_inset

for Small-Scaled Software Engineering Enterprises
\end_layout

\begin_layout Center Footer

\end_layout

\begin_layout Right Footer
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
thepage
\end_layout

\end_inset

 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
 
\end_layout

\end_inset

of 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
 
\end_layout

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
pageref{LastPage}
\end_layout

\end_inset


\end_layout

\begin_layout Chapter
Analysis
\end_layout

\begin_layout Standard
The following section focuses on the analysis of the previously desccribed
 SQA methods and other found researches.
 Under consideration of my defined requirements for midstaged companys i
 discuss six different approaches.
 The approaches are equally separated between the lifecycle stages Requirements
 & Specifications and Implementation & Design.
 Each approach is going to be summarized in a first step and the following
 part will discuss how the approach matches the defined requirements.
 
\end_layout

\begin_layout Section
Requirements & Specifications
\end_layout

\begin_layout Standard
There is no lack of research on the causes of runaway projets, and unstable
 or incomplete requirements and poor estimations are justifiably identified
 as the two major ones, and it is also widely noted that requirement errors
 are the most expensive to correct late in development or after release.
 Currently popular requirement tools such as Rational IBM, Microsofts Visual
 Studio Team System White Paper or Borland products offer a solution.
 However, effective use of these tools, including requirements quality assurance
, implies relatively high level of expertise.
 A Knowledge-Based System (KBS) as defined by helps by filling-in the attributes
 for a requirement, setting relationships between, suggests approaches for
 functional and non-functional requirements, traces change history, provides
 visualization, tracks the fullfillment degree, checks for inconsistencies
 in priorities, development order and pre-requisiste requirements, offers
 conflict resolution strategies, tracks estimations and real work effort
 and builds up statistics for analysis.
 
\begin_inset CommandInset citation
LatexCommand cite
key "Pustovalova2011"

\end_inset


\end_layout

\begin_layout Standard
The KBS approach is applicable to business analysts, project managers, quality
 engineers and software developers.
 The handling of such a programm can be teached and all people involved
 are familiar with the domain.
 The problem is to find an appropriate tool, which fullfills all represented
 functionalities listed above and can be integrated in the company, or into
 an existing project management tool.
 The advantage of such a system lies in the visualisation of dependencies
 and the influence on the project managers to have enough information to
 make the decision for the next step towards the actual most appropriate
 direction for the project.
 The licensing and maintaining costs for such tools are relatively high.
 The savings will result on requirement changes, when the project manager
 knows which components are also affected and what should be done next.
\end_layout

\begin_layout Standard
A proposed model for quality assurance at the analysis phase written by
 Ejaz, Reham and Nazmeen (2010) focuses on the creation and maintaiment
 of the Software Requirements Specification (SRS) and the Interface Requirements
 Specification (IRS) documents.
 The business will create an initial requirements document which is going
 to be elaborated and audited by a analysis group.
 The group decides if the requirement suffices or if there needs to be some
 rework.
 The team needs to generate an audit checklist, select and verify the capababili
ties of an appropriate team for the analysis group, continuous improvement
 of the verification and analysis process and be trained to focus on the
 essential characteristics a requirement specification needs to fullfill.
 This decision of not proceeding to the design process, if the audit fails,
 emphasizes the importance of clear defined requirements.
 All requirements need to be traceable within all stages of development.
 Requirement changes need to be added to the requirements specification.
 With the implicit tracebility and the gain of experience of the audit group,
 the impact on the overall system will be feasible.
 The evaluation of ten Fortune 500 Companys states a reduction of the developmen
t effort of any software system from 47.22% if the analysis team puts in
 their best efforts to do the job right.
 While the cost of defect identification and removal is reduced to 47.78%
 if they are identified in early pahases i.e.
 during the analysis phase.
 All reviewed companys do have a Capability Maturity Model Integration (CMMI)
 Level from 1-3 and the results are averaged.
\begin_inset CommandInset citation
LatexCommand cite
key "ejaz2010quality"

\end_inset


\end_layout

\begin_layout Standard
To escort the requirements dokument creation process with an appropriate
 tool which fits all the stated needs should have high priority.
 Nevertheless, there are differen tools for the requirements traceability.
 As i reasearched none of them offers the team skills and audit integration
 which is also required.
 The applicability to generalized staff can just be achieved if the team
 consists of several senior engineers.
 The need for expertise is always there in creating and reviewing requirements.
 The most development frameworks which are in charge, have such a review
 and document creation process.
 As stated above, a cost reduction of 47.78% should be possible on any software
 system.
 In my opinion, such a high percentage will not be possible to reach by
 small-scaled companys.
 I think, it is attributable to the maturity level (CMMI) of the researched
 companys.
\end_layout

\begin_layout Standard
The creation of different divisions of responsibility as proposed by Tomar,
 Ashwin and Thakare (2013) can be applied to the requirement engineering
 process with introduction of a Estimation & Forecasting division and the
 Standard & Rules enforcing divison.
 The estimation divison will try to predict by its experience cost, time,
 quality, risk and budget, efforts and number of people for the project.
 The rules enforcing divison is responsible for implementing quality assurance
 planning policy and reuse strategies required within the organization.
 This divisons wont have an effect in a company with just one single project,
 but at the time a company losses track of all projects, its time to start
 linking experiences and reuse work which has already been completed and
 tested from old and finished projects.
 
\begin_inset CommandInset citation
LatexCommand cite
key "tomar2013customized"

\end_inset


\end_layout

\begin_layout Standard
The adoption of the new divisons into the existing process landscape depends
 and differs from each company to company.
 The idea behind the divisons is the assignment of clear roles and responsibilit
ies and the creation of a knowledge database for the future.
 It is not clear, if a specialist or a generalist can fullfill the requirements
 to run such divisons properly.
 In my opinion, it refers to the generalists, because a differentiated view
 on a wide field is required, which the generalists have commonly.
 Small companys with little experience can adapt this solution, but the
 return on investment is not going to be visible right away.
 The time efficiency will increase after several projects, that means lot
 of time to cover the costs of introducing such a process.
 My recommendation would be to introduce such a process in mid staged companys.
 The smaller the company and the less projects per year, the longer it takes
 for the return on investment.
 However, I could not find appropriate tools for managing the different
 divisions.
\end_layout

\begin_layout Standard
This section discussed three approaches for the Requirements & Specification
 phase as there have been 1) the Knowledge-Based System 2) Analys Phase
 Documents 3) Divisions of Responsibility.
 The discussed approaches have some overlappings and could therefore be
 introduced all together or individual.
 What all approaches have in common, and what all authors promise are the
 big savigns in costs and the improvement of time to market.
\end_layout

\begin_layout Section
Implementation & Design
\end_layout

\begin_layout Standard
By reaching the development stage for a certain feature, the previous definition
s of requirements and specifications should be clear to every involved staff
 member.
 Nevertheless, the complexity of all requirements and dependencies combined
 in a project is seldom easy to oversee completely by a single person.
 Keeping in mind, that this stage abstracts all requirements into runnable
 code, the possibility for missunderstandings or lack of specialised knowledge
 will lead to miss the right path and walk into the wrong direction.
 Therefore, it is recommended to introduce a customizable review process
 for business relevant components as described by Hongying and Cheng (2011).
 The described guidelines and best practices described in the model can
 be used by every company.
 Only the presented templates like the Review Memo, Review Protocoll and
 Categorized Defect Table need to be adjusted to each company and tryed
 to be integrated into the issue tracking tool.
 The review process is useless, if there are no seniour developers with
 enough experience and knowledge to effectively pick the biggest sources
 of errors.
 
\begin_inset CommandInset citation
LatexCommand cite
key "6093459"

\end_inset


\end_layout

\begin_layout Standard
The review process itself can be accompained by tools.
 There are several tools for continuous inspection of code quality which
 can help tracking down the main problem domains, p.ex.
 SonarSource or SonarQube.
 The real defect elimination itself has to be done by humans, whereas the
 experience exchange is one of the main success factors and a valueable
 benefit for all team members 
\begin_inset CommandInset citation
LatexCommand cite
after "p. 384"
key "6093459"

\end_inset

.
 The applicability to only generalized staff only works, if there are senior
 developers with enough experience and knowledge to quickly determine problems
 and suggest appropriate solutions.
 The work about an overview of some of the most common development frameworks
 describes for each framework a certain review process 
\begin_inset CommandInset citation
LatexCommand cite
key "Zuser:2005:SQD:1082983.1083300"

\end_inset

.
 The efficiency of reviews has been evaluated in the paper of Marri and
 Kiran (2001) and is beeing calculated by taking in concideration each team
 members experience.
 The result shows, that the removal efficiency reaches its optimum between
 60-75% depending on the development stage and the size of the project.
\begin_inset CommandInset citation
LatexCommand cite
key "marri2001models"

\end_inset

 
\end_layout

\begin_layout Standard
A main characteristic of software engineering are changing requirements
 and historical growth of software systems, due to different reasons.
 At a certain stage, the possibility of reaching a test coverage of 100%
 is not going to be financially bearable.
 One possibility is to focus on testing areas, where the risk of failures
 is high and prioritize testing activities as code review or unit test creation
 accordingly.
 The main problem is to find a suitable tool, which links source control
 systems with issue tracking systems, extracts the needed heuristics and
 processes it to a readable report or generates tasks for the Quality Assurance
 Engineer automatically.
\begin_inset CommandInset citation
LatexCommand cite
key "Shihab:2011:PPS:1985793.1986007"

\end_inset

 The quality of the processed data needs to be high, for a reliable forecast.
 Suitable rules for only checking in the affected code to the appropriate
 issue ticket is going to be inevitable for all developers.
 
\end_layout

\begin_layout Standard
The approach of statistically analyse historical data of the code creation
 process needs a certain understanding and special knowledge for the tool
 configuration.
 The user which gets handed a report itself does not have to understand
 much about the process behind.
 Except for the developers, which need to be aware of the consequences of
 their inputs into the system, the model would work for generalized staff.
 A minimal training for the involved staff should be provided.
 The instant feedback for developers and Quality Assurance Engineers can
 be seen as the one of the main advantages in this model 
\begin_inset CommandInset citation
LatexCommand cite
after "p.1107"
key "Shihab:2011:PPS:1985793.1986007"

\end_inset

 to avoid the loos of time by studying code fragments written some weeks
 or months ago.
 Practitioners are given a powerfull mechanism for prioritizing tasks, the
 adaption of this into an existing framework depends more on the compatibility
 of the used tools as of the framework itself.
 The return on investment can not be assumed through the commonly correctness
 of statistical elaborated data, but there are no detailed background informatio
ns about it.
 On the one hand, the efficiency raises by testing the high risk areas in
 the system.
 On the other hand, bugs can be everywhere and therefore i would recommend
 to use this approach just in combination with other SQA methods.
\end_layout

\begin_layout Standard
The quality characteristics for mobile apps contain recommendations and
 best practices for developers, but i will put them out of scope and focus
 on the quality assurance team.
 The quality model for mobile applications describes what the SQA team should
 perform for quality assurance activities throughout the development of
 a mobile App.
\begin_inset CommandInset citation
LatexCommand cite
key "zahra2013efficient"

\end_inset

 An automated testing tool for the validation of functional requirements
 for multiple platforms and devices is essential.
 The functional testing does not influence the usability of the applicaiton.
 Therefore, it is urgently required to find out the areas where users get
 stuck or confused about how to proceed further to acomplish a task.
 Performanc in mobile applications is more crucial than any other applicaiton,
 as the user expects fast and efficient processing on handheld devices.
 The performance needs to be validated in all situation, normal as well
 as critical situations reffering to the network speed.
 As an important measure to keep customers happy it is needed to listen
 to their feedback by providing a possibility of bug reporting and reading
 forums or comments about the application.
 
\begin_inset CommandInset citation
LatexCommand cite
key "zahra2013efficient"

\end_inset


\end_layout

\begin_layout Standard
The global players on the app market as Apple and Google provide tools for
 quality tracking for mobile plattforms which are easy to learn and provide
 lots of user data for statistical refinement.
 The introduction of a functional requirement tool can be tricky, due to
 the lack of ressources and the high costs of automated testing its recommended
 to outsource the product testing and utilize a provider of effective SQA
 processes for competing in global markets
\begin_inset CommandInset citation
LatexCommand cite
after "p.37"
key "spriestersbach2004quality"

\end_inset

.
 The need for specialized staff is not required, most activities require
 accuracy and passion for detail.
\end_layout

\begin_layout Standard
This section discussed three approaches for the Implementation & Design
 phase as there have been 1) AQAM Review 2) Test Prioritization 3) Mobile
 Quality Characteristics.
 The presented models cover different areas in the implementation phase
 and can be applied together.
 All models have in common, to evolve the product quality in a long term
 perspective.
 The initial costs for assuring the quality will return in the maintanance
 phase.
 
\end_layout

\begin_layout Section
Summary
\end_layout

\begin_layout Standard
The next section summarize the analyzed approaches and lists them into a
 matrix for a better overview.
 Each approach has the four requirements Tools, Generalists, Compatibility
 and Cost/Time which have been measured.
\end_layout

\begin_layout Standard
First, i summarize the requirements phase wich contains the KBS, Divisions
 and Analysis Phase model.
 All models have a positive impact on the time to market and on the overall
 costs of the project.
 The approaches do not need specialised and expensive staff for the operation.
 Initial and ongoing trainings for the staff are needed to implement and
 operate the models efficiently.
 The majority of practices can be abstracted and managed by tools but the
 adaption into the existing development process is the main problem to solve.
\end_layout

\begin_layout Standard
Table 1: Overview of the the Requirements & Specification models
\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="4" columns="5">
<features tabularvalignment="middle">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Requirements
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tools
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Generalist
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Compatibility
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Cost/Time
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
KBS
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Y/N
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Y
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
N
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Y
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Divisions
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
N
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Y
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
N
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Y
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Analysis Phase
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Y/N
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Y
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Y
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Y
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
Secondly, i summarize the implementation phase which consists of the Review,
 Test Priorisation and Mobile Quality model.
 Most practices have an impact on the cost side on long term.
 The initial investments will be rewarded by saving time for rework and
 bugfixing.
 Except of the reviewing process, there is no need for specialised staff
 to fullfill the recommended aproaches.
 The abstraction of the problem domain by selecting the appropriate tools
 can be seen as the major problem to solve, if the development framework
 accepts such an approach.
\end_layout

\begin_layout Standard
Table 2: Overview of the the Implementation & Design models
\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="4" columns="5">
<features tabularvalignment="middle">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Implementation
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tools
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Generalist
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Compatibility
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Cost/Time
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Review
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Y
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Y/N
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Y
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Y
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Test Priorisation
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
N
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Y
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
N
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Y
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Mobile Quality
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Y
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Y
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Y
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Y/N
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Section
Example and use of model
\end_layout

\begin_layout Standard
In the following section, i want to explain the adoption of the model by
 analyzing a fantasy project named 
\begin_inset Quotes eld
\end_inset

Six Points
\begin_inset Quotes erd
\end_inset

.
 As a first part im going to give a short summary over the project Six Points.
 After the presentation of the project, i am going to analyse what kind
 of problems could have been handled by the proposed methods.
\end_layout

\begin_layout Standard
The project Six Points got launched from business with a scope document
 of half a page, some designs for the screens, plenty of generalized developers
 but without seniors and without timeline.
 On project start, all devel- opers created requirement docuements according
 to the presented screens.
 After one month, the first line of code got written.
 Some features got developed and got changed over time or got banned, till
 version 1 got successfully inspected.
 After this review people continued working on further features.
 Some features where already developed by the company in other projects,
 but the business rejected the reuse of these components.
 Within middle of development, the business introduced a new team of senior
 developers and the first quality engineer in history.
 After some time, the senior developers blamed the project for not fulfilling
 basic guidelines and requested time for a needed turnover.
 It is a highly competitive market and the business needs results to finance
 the project, so there is no time for turnovers.
 Code refactorings and changes are needed anyway to reach the products quality
 goals.
 These changes results in solving one problem which leads to other problems.
 But, functional tests are not available, which results into multiple testing
 cycles of the same functionality by the SQA.
 At a certain time in the project, version 1 can not be lunched due to lack
 of performance and lots of quality issues.
 
\end_layout

\begin_layout Standard
The project has some points for improvement which we will illuminate.
 
\end_layout

\begin_layout Enumerate
Starting a project without QA measures in the requirements and specifications
 analysis is a problem
\end_layout

\begin_deeper
\begin_layout Enumerate
The business should track all business relevant goals into an KBS tool first,
 developers are not trained for writing requirements and it is not their
 job to analyse business needs
\end_layout

\begin_layout Enumerate
The elaborated Use Cases have never been audited, therefore lots of changes
 and an increase of costs for rework results
\end_layout

\begin_layout Enumerate
Reuse of well established components and the satisfaction of best practices
 have not been enforced, usability and time to market will suffer from this
 decision 
\end_layout

\end_deeper
\begin_layout Enumerate
Developing and designing the application without QA measures is a problem
\end_layout

\begin_deeper
\begin_layout Enumerate
Review of a whole release or component without knowing how and what to measure
 has no qualitative high and reliable output.
 
\end_layout

\begin_layout Enumerate
Lack of automated tests shows that nobody can certainly determine the functional
ity of the components nor isolate the source of the erro.
 Error detection will cost most of the time to fix the failure.
 
\end_layout

\begin_layout Enumerate
The QA is handling reactive and not proactive without having reports about
 what got changed and what are the risks of potential defects.
 Repeated workloads without potential results of being certain about a func-
 tioning component will result.
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Branch NoChildDocument
status collapsed

\begin_layout Standard
\begin_inset CommandInset bibtex
LatexCommand bibtex
bibfiles "thesisExample"
options "alpha"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset nomencl_print
LatexCommand printnomenclature
set_width "custom"
width "2.5cm"

\end_inset


\end_layout

\end_inset


\end_layout

\end_body
\end_document
